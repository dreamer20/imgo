{"version":3,"sources":["Navbar.js","Search.js","NavbarNav.js","Dropdown.js","Checkbox.js","Image.js","Loader.js","UserInfo.js","Tags.js","ImgReview.js","App.js","registerServiceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","type","data-toggle","data-target","id","this","props","children","Component","Search","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChangeInput","bind","assertThisInitialized","handleSearchSubmit","e","handleChange","paramName","target","value","preventDefault","handleSearch","val","placeholder","aria-label","onChange","onClick","NavbarNav","navItems","dropdownTitles","map","index","key","href","Dropdown","items","item","hasOwnProperty","push","Checkbox","checked","_id","title","hint","htmlFor","text","Image","handleImageLoad","handleImageReview","width","height","reviewURL","imageData","display","isVisible","style","src","url","alt","tags","onLoad","Loader","UserInfo","state","imageIsLoaded","imageURL","userImageURL","setState","nextProps","prevState","visibility","userName","Tags","tagsString","split","trim","ImgReview","handleReviewClosing","userInfo","resolution","link","src_UserInfo","user","src_Tags","concat","imageWidth","imageHeight","pageURL","aria-hidden","order","popular","latest","imageType","all","photo","illustration","vector","orientation","horizontal","vertical","category","nature","animals","music","sports","travel","business","religion","science","places","buildings","transportation","App","loadedImagesCount","imagesProps","minHeight","$","window","requestParams","q","image_type","safesearch","page","per_page","requestedImages","imagesLoaded","isReadySendRequest","isReviewOpened","imageReview","sendRequest","setRequestParam","handleRequest","_this2","get","done","data","update","$push","hits","fail","error","alert","param","defineProperty","$set","_this3","containerWidth","innerWidth","resize","handleContainerResize","scroll","scrollTop","nextPage","trigger","images","calculatedWidth","calculatedHeight","sumOfImgWidth","imgRow","calculatedImages","rest","bodyWidth","i","length","originalWidth","j","originalHeight","parseFloat","toString","Math","floor","toFixed","forEach","image","_this4","calculatedImagesProps","calculateImageProps","updatedState","0","$merge","_this5","webformatURL","replace","src_Image","Fragment","src_Navbar","src_NavbarNav","src_Dropdown","src_Checkbox","src_Search","src_Loader","src_ImgReview","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"oTAyBeA,sMAbX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4DACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBC,KAAK,SAASC,cAAY,WAAWC,cAAY,qBAClFN,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAElBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BI,GAAG,oBAC1CC,KAAKC,MAAMC,kBAZDC,cC8BNC,cAjCb,SAAAA,EAAYH,GAAO,IAAAI,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAN,KAAAI,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAN,KAAAM,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAV,KAAMC,KAEDU,kBAAoBN,EAAKM,kBAAkBC,KAAvBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KACzBA,EAAKS,mBAAqBT,EAAKS,mBAAmBF,KAAxBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KAJTA,iFAODU,GAChBf,KAAKC,MAAMe,aAAahB,KAAKC,MAAMgB,UAAWF,EAAEG,OAAOC,kDAGtCJ,GACjBA,EAAEK,iBACFpB,KAAKC,MAAMoB,gDAKX,OACE7B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBACdH,EAAAC,EAAAC,cAAA,SACEE,KAAK,SACLD,UAAU,yBACVwB,MAAOnB,KAAKC,MAAMqB,IAClBC,YAAY,iCACZC,aAAW,iCACXC,SAAUzB,KAAKW,oBACjBnB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,6BAA6B+B,QAAS1B,KAAKc,oBAA7D,0CA5BaX,aCuBNwB,mLApBJ,IAAAtB,EAAAL,KAEH4B,EAAW5B,KAAKC,MAAM4B,eAAeC,IAAI,SAACX,EAAOY,GACnD,OAAQvC,EAAAC,EAAAC,cAAA,MAAIsC,IAAKD,EAAOpC,UAAU,qBAChCH,EAAAC,EAAAC,cAAA,KAAGuC,KAAK,IAEJtC,UAAU,2BACVE,cAAY,YAAYsB,GAC3Bd,EAAKJ,MAAMC,SAAS6B,MAIzB,OACEvC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACXiC,UAhBezB,aCmCT+B,cAjCb,SAAAA,EAAYjC,GAAO,IAAAI,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAN,KAAAkC,IACjB7B,EAAAC,OAAAE,EAAA,EAAAF,CAAAN,KAAAM,OAAAG,EAAA,EAAAH,CAAA4B,GAAAxB,KAAAV,KAAMC,KAEDe,aAAeX,EAAKW,aAAaJ,KAAlBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KAHHA,4EAMNc,GACXnB,KAAKC,MAAMe,aAAahB,KAAKC,MAAMgB,UAAWE,oCAK9C,IACIxB,EADAwC,EAAQ,GAGZ,IAAK,IAAIC,KAAQpC,KAAKC,MAAMkC,MACrBnC,KAAKC,MAAMkC,MAAME,eAAeD,KACrCzC,EAAYK,KAAKC,MAAMqB,MAAQc,EAAO,wBAA0B,gBAEhED,EAAMG,KAAK9C,EAAAC,EAAAC,cAAA,UACCgC,QAAS1B,KAAKgB,aAAaJ,KAAKZ,KAAMoC,GACtCJ,IAAKhC,KAAKC,MAAMkC,MAAMC,GACtBzC,UAAWA,GAAYK,KAAKC,MAAMkC,MAAMC,MAGtD,OACE5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACZwC,UA5BchC,aCoBRoC,cArBb,SAAAA,EAAYtC,GAAO,IAAAI,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAN,KAAAuC,IACjBlC,EAAAC,OAAAE,EAAA,EAAAF,CAAAN,KAAAM,OAAAG,EAAA,EAAAH,CAAAiC,GAAA7B,KAAAV,KAAMC,KAEDe,aAAeX,EAAKW,aAAaJ,KAAlBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KAHHA,4EAMNU,GACXf,KAAKC,MAAMe,aAAahB,KAAKC,MAAMgB,UAAWF,EAAEG,OAAOsB,0CAKvD,OACEhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCACbH,EAAAC,EAAAC,cAAA,SAAO+B,SAAUzB,KAAKgB,aAAcwB,QAASxC,KAAKC,MAAMqB,IAAK1B,KAAK,WAAWD,UAAU,uBAAuBI,GAAIC,KAAKC,MAAMwC,MAC7HjD,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kCAAkC+C,MAAO1C,KAAKC,MAAM0C,KAAMC,QAAS5C,KAAKC,MAAMwC,KAAMzC,KAAKC,MAAM4C,cAhBjG1C,aCyCR2C,cAxCb,SAAAA,EAAY7C,GAAO,IAAAI,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAN,KAAA8C,IACjBzC,EAAAC,OAAAE,EAAA,EAAAF,CAAAN,KAAAM,OAAAG,EAAA,EAAAH,CAAAwC,GAAApC,KAAAV,KAAMC,KAED8C,gBAAkB1C,EAAK0C,gBAAgBnC,KAArBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KACvBA,EAAK2C,kBAAoB3C,EAAK2C,kBAAkBpC,KAAvBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KAJRA,+EAOHU,GAEdf,KAAKC,MAAM8C,gBAAgB/C,KAAKC,MAAM8B,MAAOhB,EAAEG,OAAO+B,MAAOlC,EAAEG,OAAOgC,QAAQ,6CAG9DnC,GAChBA,EAAEK,iBACFpB,KAAKC,MAAM+C,kBAAkBhD,KAAKC,MAAMkD,UAAWnD,KAAKC,MAAMmD,4CAI9D,IAAIF,EAASlD,KAAKC,MAAMiD,OAASlD,KAAKC,MAAMiD,OAAS,GACjDD,EAAQjD,KAAKC,MAAMgD,MAAQjD,KAAKC,MAAMgD,MAAQ,GAC9CI,EAAUrD,KAAKC,MAAMqD,UAAY,QAAU,OAE/C,OACE9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAU4D,MAAO,CAACF,YAC/B7D,EAAAC,EAAAC,cAAA,KAAGuC,KAAMjC,KAAKC,MAAMkD,UAAWzB,QAAS1B,KAAKgD,kBAAmBrD,UAAU,WACxEH,EAAAC,EAAAC,cAAA,OACE6D,MAAO,CACLL,SACAD,SAEFtD,UAAU,MACV6D,IAAKxD,KAAKC,MAAMwD,IAChBC,IAAK1D,KAAKC,MAAM0D,KAChBC,OAAQ5D,KAAK+C,2BAlCL5C,aCgBL0D,mLAbX,IAAIR,EAAUrD,KAAKC,MAAMqD,UAAY,QAAU,OAC/C,OACE9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAS4D,MAAO,CAACF,WAAWtD,GAAG,mBAC5CP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAVFQ,aCkDN2D,cAjDb,SAAAA,EAAY7D,GAAO,IAAAI,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAN,KAAA8D,IACjBzD,EAAAC,OAAAE,EAAA,EAAAF,CAAAN,KAAAM,OAAAG,EAAA,EAAAH,CAAAwD,GAAApD,KAAAV,KAAMC,KAED8D,MAAQ,CACXC,eAAe,GAGjB3D,EAAK4D,SAAWhE,EAAMiE,aAEtB7D,EAAK0C,gBAAkB1C,EAAK0C,gBAAgBnC,KAArBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KATNA,iFAcjBL,KAAKmE,SAAS,CACZH,eAAe,sDAKOI,GACpBA,EAAUF,eAAiBlE,KAAKiE,WAClCjE,KAAKiE,SAAWG,EAAUF,aAG1BlE,KAAKmE,SAAS,SAACE,GACb,MAAO,CAACL,eAAe,uCAO3B,IAAIM,EAAatE,KAAK+D,MAAMC,cAAgB,UAAY,SAExD,OACExE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,aACV4D,MAAO,CAACe,cACRd,IAAKxD,KAAKC,MAAMiE,aAChBR,IAAK1D,KAAKC,MAAMsE,SAChBX,OAAQ5D,KAAK+C,kBACfvD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAaK,KAAKC,MAAMsE,kBA5CzBpE,aCkBRqE,mLAdX,IAAIb,EAAO3D,KAAKC,MAAMwE,WAAWC,MAAM,KAMvC,OAJAf,EAAOA,EAAK7B,IAAI,SAACe,EAAMd,GACrB,OAAOvC,EAAAC,EAAAC,cAAA,QAAMsC,IAAKD,EAAOpC,UAAU,0BAA0BkD,EAAK8B,UAIhEnF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACZgE,UAZQxD,aCwGJyE,cApGb,SAAAA,EAAY3E,GAAO,IAAAI,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAN,KAAA4E,IACjBvE,EAAAC,OAAAE,EAAA,EAAAF,CAAAN,KAAAM,OAAAG,EAAA,EAAAH,CAAAsE,GAAAlE,KAAAV,KAAMC,KAED4E,oBAAsBxE,EAAKwE,oBAAoBjE,KAAzBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KAC3BA,EAAK0C,gBAAkB1C,EAAK0C,gBAAgBnC,KAArBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KAEvBA,EAAK4D,SAAWhE,EAAMwD,IAEtBpD,EAAK0D,MAAQ,CACXC,eAAe,GATA3D,qFAcjBL,KAAKC,MAAM4E,gEAIX7E,KAAKmE,SAAS,CACZH,eAAe,sDAIOI,GACpBA,EAAUX,MAAQzD,KAAKiE,WACzBjE,KAAKiE,SAAWG,EAAUX,IAC1BzD,KAAKmE,SAAS,CACZH,eAAe,sCAOnB,IAEIc,EACAnB,EACAoB,EACAC,EALA1B,EAAYtD,KAAKC,MAAMqD,UAAY,QAAU,OAC7CD,EAAUrD,KAAK+D,MAAMC,cAAgB,QAAU,OAkBnD,OAZIhE,KAAKC,MAAMmD,YACb0B,EAAWtF,EAAAC,EAAAC,cAACuF,EAAD,CACGf,aAAclE,KAAKC,MAAMmD,UAAUc,aACnCK,SAAUvE,KAAKC,MAAMmD,UAAU8B,OAE7CvB,EAAOnE,EAAAC,EAAAC,cAACyF,EAAD,CAAMV,WAAYzE,KAAKC,MAAMmD,UAAUO,OAE9CoB,EAAavF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,GAAAyF,OAAiCpF,KAAKC,MAAMmD,UAAUiC,WAAtD,UAAAD,OAAsEpF,KAAKC,MAAMmD,UAAUkC,cAExGN,EAAOxF,EAAAC,EAAAC,cAAA,KAAGwB,OAAO,SAASvB,UAAU,wBAAwBsC,KAAMjC,KAAKC,MAAMmD,UAAUmC,SAAhF,wEAIP/F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAa4D,MAAO,CAACF,QAASC,IAC3C9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,UAAQE,KAAK,SAASD,UAAU,uBAAuB+B,QAAS1B,KAAK6E,qBACnErF,EAAAC,EAAAC,cAAA,QAAM8F,cAAY,QAAlB,SAEFhG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OACE8D,IAAKxD,KAAKC,MAAMwD,IAChBF,MAAO,CAACF,WACRK,IAAK1D,KAAKC,MAAM0D,KAChBhE,UAAU,yBACViE,OAAQ5D,KAAK+C,mBAEjBvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBAAd,6EACCmF,IAGLtF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBAAd,6BACCgE,IAGLnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBAAd,iEACCoF,IAGLvF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZqF,eA1FK7E,aCWpB0B,EAAiB,CAAC,6CAAU,qBAAO,+DAAc,0DACjD4D,EAAQ,CACNC,QAAW,+DACXC,OAAU,0DAEZC,EAAY,CACVC,IAAO,qBACPC,MAAS,+DACTC,aAAgB,+DAChBC,OAAU,qGAEZC,EAAc,CACZJ,IAAO,iCACPK,WAAc,uFACdC,SAAY,4EAEdC,EAAW,CACTP,IAAO,qBACPQ,OAAU,6CACVC,QAAW,mDACXC,MAAS,uCACTC,OAAU,iCACVC,OAAU,+DACVC,SAAY,uCACZC,SAAY,6CACZC,QAAW,iCACXC,OAAU,iCACVC,UAAa,mDACbC,eAAkB,0DAmRTC,cAhRb,SAAAA,EAAY/G,GAAO,IAAAI,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAN,KAAAgH,IACjB3G,EAAAC,OAAAE,EAAA,EAAAF,CAAAN,KAAAM,OAAAG,EAAA,EAAAH,CAAA0G,GAAAtG,KAAAV,KAAMC,KAEDgH,kBAAoB,EACzB5G,EAAK6G,YAAc,GACnB7G,EAAK8G,UAAYC,IAAEC,QAAQnE,SAC3B7C,EAAK0D,MAAQ,CACXuD,cAAe,CACbtF,IAAK,oCACLuF,EAAG,GACHC,WAAY,MACZvB,YAAa,MACbG,SAAU,MACVqB,YAAY,EACZC,KAAM,EACNjC,MAAO,UACPkC,SAAU,IAEZC,gBAAiB,GACjBC,cAAc,EACdC,oBAAoB,EACpBC,gBAAgB,EAChBC,YAAa,CACXvE,IAAK,KACLL,UAAW,OAIf/C,EAAK4H,YAAc5H,EAAK4H,YAAYrH,KAAjBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KACnBA,EAAK6H,gBAAkB7H,EAAK6H,gBAAgBtH,KAArBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KACvBA,EAAK0C,gBAAkB1C,EAAK0C,gBAAgBnC,KAArBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KACvBA,EAAK8H,cAAgB9H,EAAK8H,cAAcvH,KAAnBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KACrBA,EAAK2C,kBAAoB3C,EAAK2C,kBAAkBpC,KAAvBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KACzBA,EAAKwE,oBAAsBxE,EAAKwE,oBAAoBjE,KAAzBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KAjCVA,6EAoCL,IAAA+H,EAAApI,KACZA,KAAKmE,SAAS,CAAC2D,oBAAoB,IACnCV,IAAEiB,IAAI,2BAA4BrI,KAAK+D,MAAMuD,eAC1CgB,KAAK,SAAAC,GACJH,EAAKjE,SAAS,SAACE,GAIb,OAHqBmE,IAAOnE,EAAW,CACrCuD,gBAAiB,CAACa,MAAOF,EAAKG,YAMnCC,KAAK,SAAAC,GAAK,OAAIC,MAAMD,6CAGTE,EAAO3H,GACrBnB,KAAKmE,SAAS,SAACE,GAGb,OAFmBmE,IAAOnE,EAAW,CACnCiD,cAAchH,OAAAyI,EAAA,EAAAzI,CAAA,GAAGwI,EAAQ,CAACE,KAAM7H,oDAKlB,IAAA8H,EAAAjJ,KAClBA,KAAKiI,cACLjI,KAAKkJ,eAAiB9B,IAAE,QAAQ+B,aAEhC/B,IAAEC,QAAQ+B,OAAO,WACfH,EAAKC,eAAiB9B,IAAE,QAAQ+B,aAChCF,EAAKI,0BAENC,OAAO,WAEFlC,IAAEC,QAAQkC,aAAgBnC,IAAE,QAAQlE,SAA8B,EAAnBkE,IAAEC,QAAQnE,UAAgB+F,EAAKlF,MAAM+D,qBAEtFmB,EAAK9E,SAAS,SAACE,GACb,IAAImF,EAAWnF,EAAUiD,cAAcI,KAAO,EAK9C,OAJmBc,IAAOnE,EAAW,CACnCiD,cAAe,CAACI,KAAM,CAACsB,KAAMQ,QAMjCP,EAAKhB,iBAGTjI,KAAKiH,kBAAoB,0CAIzBjH,KAAKkH,YAAc,GACnBlH,KAAKmE,SAAS,SAACE,GAKb,OAJmBmE,IAAOnE,EAAW,CACnCuD,gBAAiB,CAACoB,KAAM,IACxB1B,cAAe,CAACI,KAAM,CAACsB,KAAM,OAG9BhJ,KAAKiI,aAEJjI,KAAKkJ,eAAiB,KACxB9B,IAAE,mBAAmBqC,QAAQ,qDAIbC,GAWlB,IAVA,IAKIC,EAEAC,EAPAC,EAAgB,EAChBC,EAAS,GACTC,EAAmB,GAInBC,EAAO,EAEPC,EAAYjK,KAAKkJ,eAEZgB,EAAI,EAAGA,EAAIR,EAAOS,OAAQD,IAIjC,GAHAJ,EAAOxH,KAAKoH,EAAOQ,KACnBL,GAAiBH,EAAOQ,GAAGE,eAEPH,EAAW,CAC7B,IAAK,IAAII,EAAI,EAAGA,EAAIP,EAAOK,OAAQE,IAIjCV,GADAC,EAAmBK,GADHJ,EAAgB,OADxBC,EAAOO,GAAGD,cAAgBN,EAAOO,GAAGC,gBAI5CN,GAAQO,WAAW,KAAOZ,EAAgBa,WAAW9F,MAAM,KAAK,IAChEiF,EAAkBc,KAAKC,MAAMf,GAEzBU,IAAMP,EAAOK,OAAO,IAEtBR,GADAK,GAAQA,EAAKW,UAEbX,EAAO,GAETD,EAAiBzH,KAAK,CAACsH,mBAAkBD,kBAAiBrG,WAAW,IAEvEwG,EAAS,GACTD,EAAgB,EAMpB,OAHAC,EAAOc,QAAQ,SAACC,GACdd,EAAiBzH,KAAK,CAACqH,gBAAiB,GAAIC,iBAAkB,GAAItG,WAAW,MAExEyG,kDAGe,IAAAe,EAAA9K,KACtBA,KAAK+K,sBAAwB/K,KAAKgL,oBAAoBhL,KAAKkH,aAC3DlH,KAAKmE,SAAS,SAACE,GAKb,IAJA,IAAI4G,EAAezC,IAAOnE,EAAW,CACnCuD,gBAAiB,CAACsD,EAAG,CAACC,OAAQL,EAAKC,sBAAsB,OAGlDb,EAAI,EAAGA,EAAI7F,EAAUuD,gBAAgBuC,OAAQD,IACpDe,EAAezC,IAAOyC,EAAc,CAACrD,gBAAgBtH,OAAAyI,EAAA,EAAAzI,CAAA,GAAG4J,EAAI,CAACiB,OAAQL,EAAKC,sBAAsBb,OAElG,OAAOe,4CAIKlJ,EAAOqI,EAAeE,EAAgBhH,GAAW,IAAA8H,EAAApL,KAC/DA,KAAKkH,YAAYnF,GAAS,CAACqI,gBAAeE,iBAAgBhH,eAEpDtD,KAAKiH,oBAAsBjH,KAAK+D,MAAMuD,cAAcK,WAExD3H,KAAK+K,sBAAwB/K,KAAKgL,oBAAoBhL,KAAKkH,aAC3DlH,KAAKmE,SAAS,SAACE,GAMb,IALA,IAAI4G,EAAezC,IAAOnE,EAAW,CACnCuD,gBAAiB,CAACsD,EAAG,CAACC,OAAQC,EAAKL,sBAAsB,KACzDjD,mBAAoB,CAACkB,MAAM,KAGpBkB,EAAI,EAAGA,EAAI7F,EAAUuD,gBAAgBuC,OAAQD,IACpDe,EAAezC,IAAOyC,EAAc,CAACrD,gBAAgBtH,OAAAyI,EAAA,EAAAzI,CAAA,GAAG4J,EAAI,CAACiB,OAAQC,EAAKL,sBAAsBb,OAElG,OAAOe,IAETjL,KAAKiH,kBAAoB,6CAIXxD,EAAKL,GACrBpD,KAAKmE,SAAS,CACZ4D,gBAAgB,EAChBC,YAAa,CAACvE,MAAKL,6DAKrBpD,KAAKmE,SAAS,CAAC4D,gBAAgB,qCAM3B,IAFJ,IAAI2B,EAAS,GAEAQ,EAAI,EAAGA,EAAIlK,KAAK+D,MAAM6D,gBAAgBuC,OAAQD,IAAK,CAC1D,IAAIzG,EAAMzD,KAAK+D,MAAM6D,gBAAgBsC,GAAGmB,aAAaC,QAAQ,OAAO,QAChEnI,EAAanD,KAAK+D,MAAM6D,gBAAgBsC,GAAGmB,aAAaC,QAAQ,OAAO,QACvEtL,KAAK+D,MAAM6D,gBAAgBsC,GAAG5G,UAChCoG,EAAOpH,KAAK9C,EAAAC,EAAAC,cAAC6L,EAAD,CACExJ,MAAOmI,EACP5G,WAAW,EACXH,UAAWA,EACXC,UAAWpD,KAAK+D,MAAM6D,gBAAgBsC,GACtClI,IAAKhC,KAAK+D,MAAM6D,gBAAgB7H,GAChCkD,MAAOjD,KAAK+D,MAAM6D,gBAAgBsC,GAAGP,gBACrCzG,OAAQlD,KAAK+D,MAAM6D,gBAAgBsC,GAAGN,iBACtC7G,gBAAiB/C,KAAK+C,gBACtBC,kBAAmBhD,KAAKgD,kBACxBU,IAAK1D,KAAK+D,MAAM6D,gBAAgBsC,GAAGvG,KACnCF,IAAKA,KAEnBiG,EAAOpH,KAAK9C,EAAAC,EAAAC,cAAC6L,EAAD,CACExJ,MAAOmI,EACPlI,IAAKhC,KAAK+D,MAAM6D,gBAAgB7H,GAChCgD,gBAAiB/C,KAAK+C,gBACtBU,IAAKA,KAI3B,OACEjE,EAAAC,EAAAC,cAACF,EAAAC,EAAM+L,SAAP,KACEhM,EAAAC,EAAAC,cAAC+L,EAAD,KACEjM,EAAAC,EAAAC,cAACgM,EAAD,CAAW7J,eAAgBA,GACzBrC,EAAAC,EAAAC,cAACiM,EAAD,CACE3K,aAAchB,KAAKkI,gBACnBjH,UAAU,QACVkB,MAAOsD,EACPnE,IAAKtB,KAAK+D,MAAMuD,cAAc7B,QAChCjG,EAAAC,EAAAC,cAACiM,EAAD,CACE3K,aAAchB,KAAKkI,gBACnBjH,UAAU,aACVkB,MAAOyD,EACPtE,IAAKtB,KAAK+D,MAAMuD,cAAcE,aAChChI,EAAAC,EAAAC,cAACiM,EAAD,CACE3K,aAAchB,KAAKkI,gBACnBjH,UAAU,cACVkB,MAAO8D,EACP3E,IAAKtB,KAAK+D,MAAMuD,cAAcrB,cAChCzG,EAAAC,EAAAC,cAACiM,EAAD,CACE3K,aAAchB,KAAKkI,gBACnBjH,UAAU,WACVkB,MAAOiE,EACP9E,IAAKtB,KAAK+D,MAAMuD,cAAclB,YAElC5G,EAAAC,EAAAC,cAACkM,EAAD,CACEtK,IAAKtB,KAAK+D,MAAMuD,cAAcG,WAC9BxG,UAAU,aACV4B,KAAK,8FACLF,KAAK,kVACLF,IAAI,eACJzB,aAAchB,KAAKkI,kBACrB1I,EAAAC,EAAAC,cAACmM,EAAD,CACEvK,IAAKtB,KAAK+D,MAAMuD,cAAcC,EAC9BtG,UAAU,IACVD,aAAchB,KAAKkI,gBACnB7G,aAAcrB,KAAKmI,iBAEvB3I,EAAAC,EAAAC,cAAA,OACEC,UAAU,yBACV4D,MAAO,CAAC4D,UAAWnH,KAAKmH,YAEvBuC,EAEDlK,EAAAC,EAAAC,cAACoM,EAAD,CAAQxI,WAAYtD,KAAK+D,MAAM+D,sBAEjCtI,EAAAC,EAAAC,cAACqM,EAAD,CACEtI,IAAKzD,KAAK+D,MAAMiE,YAAYvE,IAC5BL,UAAWpD,KAAK+D,MAAMiE,YAAY5E,UAClCyB,oBAAqB7E,KAAK6E,oBAC1BvB,UAAWtD,KAAK+D,MAAMgE,yBA3Qd5H,aCpCZ6L,EAAcC,QACW,cAA7B5E,OAAO6E,SAASC,UAEe,UAA7B9E,OAAO6E,SAASC,UAEhB9E,OAAO6E,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB9I,QACfwI,UAAUC,cAAcQ,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAAvE,GACLqE,QAAQrE,MAAM,4CAA6CA,KCzEjEwE,IAASC,OAAO7N,EAAAC,EAAAC,cAAC4N,EAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBjB,UAAW,CAGzE,GADkB,IAAIkB,IAAIC,QAAwBrG,OAAO6E,UAC3CyB,SAAWtG,OAAO6E,SAASyB,OAIvC,OAGFtG,OAAOuG,iBAAiB,OAAQ,WAC9B,IAAMtB,EAAK,GAAAlH,OAAMsI,QAAN,sBAEP1B,GAiDV,SAAiCM,GAE/BuB,MAAMvB,GACHI,KAAK,SAAAoB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQ3F,IAAI,gBAAgB4F,QAAQ,cAG7C1B,UAAUC,cAAc0B,MAAMxB,KAAK,SAAAC,GACjCA,EAAawB,aAAazB,KAAK,WAC7BrF,OAAO6E,SAASkC,aAKpB/B,EAAgBC,KAGnBa,MAAM,WACLF,QAAQC,IACN,mEArEAmB,CAAwB/B,GAIxBC,UAAUC,cAAc0B,MAAMxB,KAAK,WACjCO,QAAQC,IACN,+GAMJb,EAAgBC,MCzCxBgC","file":"static/js/main.3d8cff0a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n// require('bootstrap');\r\n\r\n\r\n\r\nclass Navbar extends Component {\r\n\r\n  render() {\r\n\r\n\r\n\r\n    return (\r\n      <div className=\"navbar navbar-expand-lg navbar-dark bg-primary fixed-top\">\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavContent\" >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavContent\">\r\n          {this.props.children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleChangeInput = this.handleChangeInput.bind(this);\r\n    this.handleSearchSubmit = this.handleSearchSubmit.bind(this);\r\n  }\r\n\r\n  handleChangeInput(e) {\r\n    this.props.handleChange(this.props.paramName, e.target.value)\r\n  }\r\n\r\n  handleSearchSubmit(e) {\r\n    e.preventDefault();\r\n    this.props.handleSearch();\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <form className=\"form-inline mt-2\">\r\n        <input \r\n          type=\"search\" \r\n          className=\"form-control mr-2 mb-2\" \r\n          value={this.props.val}\r\n          placeholder=\"Поиск\"\r\n          aria-label=\"Поиск\"\r\n          onChange={this.handleChangeInput}/>\r\n        <button className=\"btn btn-outline-light mb-2\" onClick={this.handleSearchSubmit}>Поиск</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;","import React, { Component } from 'react';\r\n\r\n\r\nclass NavbarNav extends Component {\r\n\r\n  render() {\r\n\r\n    let navItems = this.props.dropdownTitles.map((value, index) => {\r\n      return (<li key={index} className=\"nav-item dropdown\">\r\n        <a href=\"#\"\r\n            \r\n            className=\"nav-link dropdown-toggle\" \r\n            data-toggle=\"dropdown\">{value}</a>\r\n        {this.props.children[index]}\r\n      </li>);\r\n    });\r\n\r\n    return (\r\n      <ul className=\"navbar-nav mr-auto\">\r\n        {navItems}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavbarNav;","import React, { Component } from 'react';\r\n// import logo from './logo.svg';\r\n// require('bootstrap');\r\n\r\nclass Dropdown extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(value) {\r\n    this.props.handleChange(this.props.paramName, value);\r\n  }\r\n\r\n  render() {\r\n\r\n    let items = [],\r\n        className;\r\n\r\n    for (let item in this.props.items) {\r\n      if (!this.props.items.hasOwnProperty(item)) continue;\r\n      className = this.props.val === item ? \"dropdown-item checked\" : \"dropdown-item\";\r\n\r\n      items.push(<button \r\n                  onClick={this.handleChange.bind(this, item)} \r\n                  key={this.props.items[item]}\r\n                  className={className}>{this.props.items[item]}</button>);\r\n    }\r\n\r\n    return (\r\n      <div className=\"dropdown-menu\">\r\n        {items}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dropdown;\r\n","import React, {Component} from 'react';\r\n\r\nclass Checkbox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.props.handleChange(this.props.paramName, e.target.checked);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"custom-control custom-checkbox mr-2\">\r\n        <input onChange={this.handleChange} checked={this.props.val} type=\"checkbox\" className=\"custom-control-input\" id={this.props._id}/>\r\n        <label className=\"custom-control-label text-light\" title={this.props.hint} htmlFor={this.props._id}>{this.props.text}</label>\r\n      </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Checkbox;","import React, { Component } from 'react';\r\n\r\nclass Image extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleImageLoad = this.handleImageLoad.bind(this);\r\n    this.handleImageReview = this.handleImageReview.bind(this);\r\n  }\r\n\r\n  handleImageLoad(e) {\r\n    \r\n    this.props.handleImageLoad(this.props.index, e.target.width, e.target.height, true);\r\n  }\r\n\r\n  handleImageReview(e) {\r\n    e.preventDefault();\r\n    this.props.handleImageReview(this.props.reviewURL, this.props.imageData);\r\n  }\r\n\r\n  render() {\r\n    let height = this.props.height ? this.props.height : \"\",\r\n        width = this.props.width ? this.props.width : \"\",\r\n        display = this.props.isVisible ? \"block\" : \"none\";\r\n\r\n    return (\r\n      <div className=\"img-box\" style={{display}}>\r\n        <a href={this.props.reviewURL} onClick={this.handleImageReview} className=\"img-ref\">\r\n          <img \r\n            style={{\r\n              height,\r\n              width\r\n            }}\r\n            className=\"img\" \r\n            src={this.props.url}\r\n            alt={this.props.tags}\r\n            onLoad={this.handleImageLoad} />\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Image;","import React, { Component } from 'react';\r\n\r\nclass Loader extends Component {\r\n  \r\n  render() {\r\n    let display = this.props.isVisible ? \"block\" : \"none\";\r\n    return (\r\n      <div className=\"loader\" style={{display}}  id=\"loader-rect-rv2\">\r\n        <div className=\"rect-rv2\"></div>\r\n        <div className=\"rect-rv2\"></div>\r\n        <div className=\"rect-rv2\"></div>\r\n        <div className=\"rect-rv2\"></div>\r\n        <div className=\"rect-rv2\"></div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Loader;","import React, { Component } from 'react';\r\n\r\nclass UserInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      imageIsLoaded: false\r\n    };\r\n\r\n    this.imageURL = props.userImageURL;\r\n\r\n    this.handleImageLoad = this.handleImageLoad.bind(this);\r\n  }\r\n\r\n  handleImageLoad() {\r\n    // console.log('handle image');\r\n    this.setState({\r\n      imageIsLoaded: true\r\n    });\r\n  }\r\n\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.userImageURL !== this.imageURL) {\r\n      this.imageURL = nextProps.userImageURL;\r\n    // console.log('will recieve porps');\r\n\r\n      this.setState((prevState) => {\r\n        return {imageIsLoaded: false};\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    let visibility = this.state.imageIsLoaded ? \"visible\" : \"hidden\";\r\n\r\n    return (\r\n      <div className=\"user-info\">\r\n        <img \r\n          className=\"user-image\"\r\n          style={{visibility}} \r\n          src={this.props.userImageURL} \r\n          alt={this.props.userName}\r\n          onLoad={this.handleImageLoad}/>\r\n        <span className=\"user-name\">{this.props.userName}</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UserInfo;","import React, { Component } from 'react';\r\n\r\nclass Tags extends Component {\r\n\r\n  render() {\r\n\r\n    let tags = this.props.tagsString.split(\",\");\r\n\r\n    tags = tags.map((text, index) => {\r\n      return <span key={index} className=\"badge badge-light mr-2\">{text.trim()}</span>\r\n    });\r\n\r\n    return (\r\n        <div className=\"tags\">\r\n          {tags}\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Tags;","import React, { Component } from 'react';\r\n\r\nimport UserInfo from './UserInfo'\r\nimport Tags from './Tags'\r\n\r\nclass ImgReview extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleReviewClosing = this.handleReviewClosing.bind(this);\r\n    this.handleImageLoad = this.handleImageLoad.bind(this);\r\n\r\n    this.imageURL = props.url;\r\n\r\n    this.state = {\r\n      imageIsLoaded: false\r\n    };\r\n  }\r\n\r\n  handleReviewClosing() {\r\n    this.props.handleReviewClosing();\r\n  }\r\n\r\n  handleImageLoad() {\r\n    this.setState({\r\n      imageIsLoaded: true\r\n    });\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.url !== this.imageURL) {\r\n      this.imageURL = nextProps.url;\r\n      this.setState({\r\n        imageIsLoaded: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    let isVisible = this.props.isVisible ? \"block\" : \"none\",\r\n        display = this.state.imageIsLoaded ? \"block\" : \"none\",\r\n        userInfo,\r\n        tags,\r\n        resolution,\r\n        link;\r\n\r\n    if (this.props.imageData) {\r\n      userInfo = <UserInfo \r\n                    userImageURL={this.props.imageData.userImageURL}\r\n                    userName={this.props.imageData.user} />;\r\n\r\n      tags = <Tags tagsString={this.props.imageData.tags} />\r\n\r\n      resolution = <span className=\"resolution\">{`${this.props.imageData.imageWidth} × ${this.props.imageData.imageHeight}`}</span>\r\n\r\n      link = <a target=\"_blank\" className=\"btn btn-outline-light\" href={this.props.imageData.pageURL}>Открыть на pixabay.com</a>\r\n    }\r\n\r\n    return (\r\n      <div className=\"img-review\" style={{display: isVisible}} >\r\n        <div className=\"img-review-body\">\r\n          <button type=\"button\" className=\"img-review-close-btn\" onClick={this.handleReviewClosing}>\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n          <div className=\"img-view\">\r\n            <img \r\n              src={this.props.url} \r\n              style={{display}}\r\n              alt={this.props.tags}\r\n              className=\"review-image img-fluid\" \r\n              onLoad={this.handleImageLoad}/>\r\n          </div>\r\n          <div className=\"img-info\">\r\n            <div className=\"container-fluid\">      \r\n              <div className=\"row mb-3\">\r\n                <div className=\"col-md-12\">\r\n                  <h5 className=\"img-info-row-title\">Пользователь:</h5>\r\n                  {userInfo}\r\n                </div>\r\n              </div>        \r\n              <div className=\"row mb-3\">\r\n                <div className=\"col-md-12\">\r\n                  <h5 className=\"img-info-row-title\">Теги:</h5>\r\n                  {tags}\r\n                </div>\r\n              </div>        \r\n              <div className=\"row mb-3\">\r\n                <div className=\"col-md-12\">\r\n                  <h5 className=\"img-info-row-title\">Разрешение:</h5>\r\n                  {resolution}\r\n                </div>\r\n              </div>        \r\n              <div className=\"row pb-3\">\r\n                <div className=\"col-md-12\">\r\n                  {link}\r\n                </div>\r\n              </div>        \r\n            </div>\r\n          </div> \r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ImgReview;","import React, { Component } from 'react';\r\nimport update from 'immutability-helper'\r\nimport './style.css';\r\nimport $ from \"jquery\";\r\nimport \"popper.js\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"bootstrap\";\r\nimport Navbar from \"./Navbar\";\r\nimport Search from './Search';\r\nimport NavbarNav from './NavbarNav';\r\nimport Dropdown from './Dropdown';\r\nimport Checkbox from './Checkbox';\r\nimport Image from './Image';\r\nimport Loader from './Loader';\r\nimport ImgReview from './ImgReview';\r\n\r\nlet dropdownTitles = ['Порядок','Тип', 'Ориентация', 'Катигория'],\r\n    order = {\r\n      \"popular\": 'Популярное',\r\n      \"latest\": 'Последнее',\r\n    },\r\n    imageType = {\r\n      \"all\": 'Все',\r\n      \"photo\": 'Фотографии',\r\n      \"illustration\": 'Илюстрации',\r\n      \"vector\": 'Векторная графика'\r\n    },\r\n    orientation = {\r\n      \"all\": 'Любая',\r\n      \"horizontal\": 'Горизонтальная',\r\n      \"vertical\": 'Вертикальная'\r\n    },\r\n    category = {\r\n      \"all\": \"Все\",\r\n      \"nature\": 'Природа',\r\n      \"animals\": 'Животные',\r\n      \"music\": 'Музыка',\r\n      \"sports\": 'Спорт',\r\n      \"travel\": 'Путешетвия',\r\n      \"business\": 'Бизнес',\r\n      \"religion\": 'Религия',\r\n      \"science\": 'Наука',\r\n      \"places\": 'Места',\r\n      \"buildings\": 'Строения',\r\n      \"transportation\": 'Транспорт'\r\n    }\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.loadedImagesCount = 0;\r\n    this.imagesProps = [];\r\n    this.minHeight = $(window).height();\r\n    this.state = {\r\n      requestParams: {\r\n        key: \"7775574-3025f5a4e25df18f8739c96bc\",\r\n        q: \"\",\r\n        image_type: \"all\",\r\n        orientation: \"all\",\r\n        category: \"all\",\r\n        safesearch: false,\r\n        page: 1,\r\n        order: \"popular\",\r\n        per_page: 20\r\n      },\r\n      requestedImages: [],\r\n      imagesLoaded: false,\r\n      isReadySendRequest: true,\r\n      isReviewOpened: false,\r\n      imageReview: {\r\n        url: null,\r\n        imageData: null\r\n      }\r\n    }\r\n\r\n    this.sendRequest = this.sendRequest.bind(this);\r\n    this.setRequestParam = this.setRequestParam.bind(this);\r\n    this.handleImageLoad = this.handleImageLoad.bind(this);\r\n    this.handleRequest = this.handleRequest.bind(this);\r\n    this.handleImageReview = this.handleImageReview.bind(this);\r\n    this.handleReviewClosing = this.handleReviewClosing.bind(this);\r\n  }\r\n\r\n  sendRequest() {\r\n    this.setState({isReadySendRequest: false});\r\n    $.get('https://pixabay.com/api/', this.state.requestParams)\r\n      .done(data => {\r\n        this.setState((prevState) => {\r\n            let updatedState = update(prevState, {\r\n            requestedImages: {$push: data.hits}\r\n          });            \r\n          return updatedState;\r\n          \r\n        });\r\n      })\r\n      .fail(error => alert(error));\r\n  }\r\n\r\n  setRequestParam(param, value) {\r\n    this.setState((prevState) => {\r\n      let updatedState = update(prevState, {\r\n        requestParams: {[param]: {$set: value}}});\r\n      return updatedState;\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.sendRequest();\r\n    this.containerWidth = $('body').innerWidth();\r\n\r\n    $(window).resize(() => {\r\n      this.containerWidth = $('body').innerWidth();\r\n      this.handleContainerResize();\r\n    })\r\n    .scroll(() => {\r\n\r\n      if ($(window).scrollTop() >= ($('body').height() - $(window).height()*2 ) && this.state.isReadySendRequest) {\r\n\r\n        this.setState((prevState) => {\r\n          let nextPage = prevState.requestParams.page + 1;\r\n          let updatedState = update(prevState, {\r\n            requestParams: {page: {$set: nextPage}}\r\n          });\r\n\r\n          return updatedState;\r\n        });\r\n\r\n        this.sendRequest();\r\n      }\r\n    });\r\n    this.loadedImagesCount = 0;\r\n  }\r\n\r\n  handleRequest() {\r\n    this.imagesProps = [];\r\n    this.setState((prevState) => {\r\n      let updatedState = update(prevState, {\r\n        requestedImages: {$set: []},\r\n        requestParams: {page: {$set: 1}}\r\n      });\r\n      return updatedState;\r\n    }, this.sendRequest);\r\n\r\n    if (this.containerWidth < 992) {\r\n      $(\".navbar-toggler\").trigger(\"click\");\r\n    }\r\n  }\r\n\r\n  calculateImageProps(images) {\r\n    let sumOfImgWidth = 0,\r\n        imgRow = [],\r\n        calculatedImages = [],\r\n        ratio,\r\n        sumOfImgRatio,\r\n        calculatedWidth,\r\n        rest = 0,\r\n        calculatedHeight,\r\n        bodyWidth = this.containerWidth;\r\n\r\n    for (let i = 0; i < images.length; i++) {\r\n      imgRow.push(images[i]);\r\n      sumOfImgWidth += images[i].originalWidth;\r\n\r\n      if (sumOfImgWidth > bodyWidth) {\r\n        for (let j = 0; j < imgRow.length; j++) {\r\n          ratio = imgRow[j].originalWidth / imgRow[j].originalHeight;\r\n          sumOfImgRatio = sumOfImgWidth / 340;\r\n          calculatedHeight = bodyWidth / sumOfImgRatio;\r\n          calculatedWidth = calculatedHeight * ratio;\r\n          rest += parseFloat(\"0.\" + calculatedWidth.toString().split(\".\")[1]);\r\n          calculatedWidth = Math.floor(calculatedWidth);\r\n\r\n          if (j === imgRow.length-1) {\r\n            rest = +rest.toFixed();\r\n            calculatedWidth += rest;\r\n            rest = 0; \r\n          }\r\n          calculatedImages.push({calculatedHeight, calculatedWidth, isVisible: true});\r\n        }\r\n        imgRow = [];\r\n        sumOfImgWidth = 0;\r\n      }\r\n    }\r\n    imgRow.forEach((image) => {\r\n      calculatedImages.push({calculatedWidth: \"\", calculatedHeight: \"\", isVisible: true});\r\n    });\r\n    return calculatedImages;\r\n  }\r\n\r\n  handleContainerResize() {\r\n    this.calculatedImagesProps = this.calculateImageProps(this.imagesProps);\r\n    this.setState((prevState) => {\r\n      let updatedState = update(prevState, {\r\n        requestedImages: {0: {$merge: this.calculatedImagesProps[0]}}\r\n      });\r\n\r\n      for (let i = 1; i < prevState.requestedImages.length; i++) {\r\n        updatedState = update(updatedState, {requestedImages: {[i]: {$merge: this.calculatedImagesProps[i]}}});\r\n      }\r\n      return updatedState;\r\n    });\r\n  }\r\n\r\n  handleImageLoad(index, originalWidth, originalHeight, isVisible) {\r\n    this.imagesProps[index] = {originalWidth, originalHeight, isVisible};\r\n\r\n    if (++this.loadedImagesCount === this.state.requestParams.per_page) {\r\n      \r\n      this.calculatedImagesProps = this.calculateImageProps(this.imagesProps);\r\n      this.setState((prevState) => {\r\n        let updatedState = update(prevState, {\r\n          requestedImages: {0: {$merge: this.calculatedImagesProps[0]}},\r\n          isReadySendRequest: {$set: true}\r\n        });\r\n\r\n        for (let i = 1; i < prevState.requestedImages.length; i++) {\r\n          updatedState = update(updatedState, {requestedImages: {[i]: {$merge: this.calculatedImagesProps[i]}}});\r\n        }\r\n        return updatedState;\r\n      });\r\n      this.loadedImagesCount = 0;\r\n    }\r\n  }\r\n\r\n  handleImageReview(url, imageData) {\r\n    this.setState({\r\n      isReviewOpened: true,\r\n      imageReview: {url, imageData}\r\n    });\r\n  }\r\n\r\n  handleReviewClosing() {\r\n    this.setState({isReviewOpened: false});\r\n  }\r\n\r\n  render() {\r\n    let images = [];\r\n\r\n        for (let i = 0; i < this.state.requestedImages.length; i++) {\r\n          let url = this.state.requestedImages[i].webformatURL.replace(\"_640\",\"_340\"),\r\n              reviewURL =  this.state.requestedImages[i].webformatURL.replace(\"_640\",\"_960\");\r\n          if (this.state.requestedImages[i].isVisible) {\r\n            images.push(<Image \r\n                          index={i}\r\n                          isVisible={true}\r\n                          reviewURL={reviewURL}\r\n                          imageData={this.state.requestedImages[i]}\r\n                          key={this.state.requestedImages.id}\r\n                          width={this.state.requestedImages[i].calculatedWidth}\r\n                          height={this.state.requestedImages[i].calculatedHeight}\r\n                          handleImageLoad={this.handleImageLoad}\r\n                          handleImageReview={this.handleImageReview}\r\n                          alt={this.state.requestedImages[i].tags}\r\n                          url={url}/>);            \r\n          } else {\r\n            images.push(<Image \r\n                          index={i} \r\n                          key={this.state.requestedImages.id}\r\n                          handleImageLoad={this.handleImageLoad} \r\n                          url={url}/>);            \r\n          }\r\n        }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Navbar>\r\n          <NavbarNav dropdownTitles={dropdownTitles}>\r\n            <Dropdown \r\n              handleChange={this.setRequestParam} \r\n              paramName=\"order\" \r\n              items={order}\r\n              val={this.state.requestParams.order}/>\r\n            <Dropdown \r\n              handleChange={this.setRequestParam} \r\n              paramName=\"image_type\" \r\n              items={imageType}\r\n              val={this.state.requestParams.image_type}/>\r\n            <Dropdown \r\n              handleChange={this.setRequestParam} \r\n              paramName=\"orientation\" \r\n              items={orientation}\r\n              val={this.state.requestParams.orientation}/>\r\n            <Dropdown \r\n              handleChange={this.setRequestParam} \r\n              paramName=\"category\" \r\n              items={category}\r\n              val={this.state.requestParams.category}/>\r\n          </NavbarNav>\r\n          <Checkbox \r\n            val={this.state.requestParams.safesearch}\r\n            paramName=\"safesearch\"\r\n            text=\"Безопасный поиск\" \r\n            hint=\"Не показывать изображения превышающие возрастное ограничение\" \r\n            _id=\"safeCheckbox\"\r\n            handleChange={this.setRequestParam}/>\r\n          <Search \r\n            val={this.state.requestParams.q}\r\n            paramName=\"q\"\r\n            handleChange={this.setRequestParam} \r\n            handleSearch={this.handleRequest}/>\r\n        </Navbar>\r\n        <div \r\n          className=\"img-container clearfix\" \r\n          style={{minHeight: this.minHeight}} >\r\n\r\n          {images}\r\n          \r\n          <Loader isVisible={!this.state.isReadySendRequest}/>\r\n        </div>\r\n        <ImgReview \r\n          url={this.state.imageReview.url}\r\n          imageData={this.state.imageReview.imageData}\r\n          handleReviewClosing={this.handleReviewClosing} \r\n          isVisible={this.state.isReviewOpened} />\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}